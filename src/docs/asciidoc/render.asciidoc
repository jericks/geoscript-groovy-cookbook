ifndef::imagesdir[:imagesdir: images]
ifndef::sourcedir[:sourcedir: ../../main/groovy]

== Render Recipes

=== Creating Maps

[source,groovy]
.Create a Map with Layers
----
include::{sourcedir}/geoscript/cookbook/RenderRecipes.groovy[tags=createMap,indent=0]
----
[.thumb]
image::map_create.png[]

=== Rendering Maps

==== Image

[source,groovy]
.Render a Map to an image using an Image Renderer
----
include::{sourcedir}/geoscript/cookbook/RenderRecipes.groovy[tags=renderToImage,indent=0]
----
[.thumb]
image::map_image_image.png[]

[source,groovy]
.Render a Map to an OutputStream using the Image Renderer
----
include::{sourcedir}/geoscript/cookbook/RenderRecipes.groovy[tags=renderToFile,indent=0]
----
[.thumb]
image::map_image_file.jpeg[]

==== PNG

[source,groovy]
.Render a Map to an Image using the PNG Renderer
----
include::{sourcedir}/geoscript/cookbook/RenderRecipes.groovy[tags=renderToPngImage,indent=0]
----
[.thumb]
image::map_png_image.png[]

[source,groovy]
.Render a Map to an OutputStream using the PNG Renderer
----
include::{sourcedir}/geoscript/cookbook/RenderRecipes.groovy[tags=renderToPngFile,indent=0]
----
[.thumb]
image::map_png_file.png[]

==== JPEG

[source,groovy]
.Render a Map to an Image using the JPEG Renderer
----
include::{sourcedir}/geoscript/cookbook/RenderRecipes.groovy[tags=renderToJpegImage,indent=0]
----
[.thumb]
image::map_jpeg_image.jpeg[]

[source,groovy]
.Render a Map to an OutputStream using the JPEG Renderer
----
include::{sourcedir}/geoscript/cookbook/RenderRecipes.groovy[tags=renderToJpegFile,indent=0]
----
[.thumb]
image::map_jpeg_file.jpeg[]

==== GIF

[source,groovy]
.Render a Map to an Image using the GIF Renderer
----
include::{sourcedir}/geoscript/cookbook/RenderRecipes.groovy[tags=renderToGifImage,indent=0]
----
[.thumb]
image::map_gif_image.png[]

[source,groovy]
.Render a Map to an OutputStream using the GIF Renderer
----
include::{sourcedir}/geoscript/cookbook/RenderRecipes.groovy[tags=renderToGifFile,indent=0]
----
[.thumb]
image::map_gif_file.png[]

==== GeoTIFF

[source,groovy]
.Render a Map to an Image using the GeoTIFF Renderer
----
include::{sourcedir}/geoscript/cookbook/RenderRecipes.groovy[tags=renderToGeoTiffImage,indent=0]
----
[.thumb]
image::map_geotiff_image.png[]

[source,groovy]
.Render a Map to an OutputStream using the GeoTIFF Renderer
----
include::{sourcedir}/geoscript/cookbook/RenderRecipes.groovy[tags=renderToGeoTiffFile,indent=0]
----
[.thumb]
image::map_geotiff_file.png[]

==== ASCII

[source,groovy]
.Render a Map to an string using the ASCII Renderer
----
include::{sourcedir}/geoscript/cookbook/RenderRecipes.groovy[tags=renderToAsciiString,indent=0]
----
....
include::output/render_ascii_string.txt[]
....

[source,groovy]
.Render a Map to an text file using the ASCII Renderer
----
include::{sourcedir}/geoscript/cookbook/RenderRecipes.groovy[tags=renderToAsciiFile,indent=0]
----
....
include::output/render_ascii_file.txt[]
....

==== Base64

[source,groovy]
.Render a Map to an string using the Base64 Renderer
----
include::{sourcedir}/geoscript/cookbook/RenderRecipes.groovy[tags=renderToBase64String,indent=0]
----
....
include::output/render_base64_string.txt[]
....

[source,groovy]
.Render a Map to an text file using the Base64 Renderer
----
include::{sourcedir}/geoscript/cookbook/RenderRecipes.groovy[tags=renderToBase64File,indent=0]
----
....
include::output/render_base64_file.txt[]
....

==== PDF

[source,groovy]
.Render a Map to a PDF Document using the PDF Renderer
----
include::{sourcedir}/geoscript/cookbook/RenderRecipes.groovy[tags=renderToPdfDocument,indent=0]
----

[.thumb]
image::render_pdf.png[]

[source,groovy]
.Render a Map to a PDF file using the PDF Renderer
----
include::{sourcedir}/geoscript/cookbook/RenderRecipes.groovy[tags=renderToPdfFile,indent=0]
----

[.thumb]
image::render_pdf.png[]