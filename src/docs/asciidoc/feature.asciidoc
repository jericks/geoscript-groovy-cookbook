ifndef::imagesdir[:imagesdir: images]
ifndef::sourcedir[:sourcedir: ../../main/groovy]

== Feature Recipes

The Feature classes are in the *http://geoscript.github.io/geoscript-groovy/api/1.18-SNAPSHOT/geoscript/feature/package-summary.html[geoscript.feature]* package.

The major classes in this package include Field, Schema, and Feature.

A Field has a name and a type and describes a column of data.

A Schema is a collection of Fields together with a name.  Schemas are used to create new Layers.

A Feature contains a geometry and a collection of attributes.  A collection of Features is called a Layer.

=== Creating Fields

[source,groovy]
.Create a Field with a name and a type
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=createField,indent=0]
----
....
include::output/feature_field_create.txt[]
....

[source,groovy]
.Create a Geometry Field with a name and a geometry type and an optional projection
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=createGeometryField,indent=0]
----
....
include::output/feature_field_create_geometry.txt[]
....

[source,groovy]
.Create a Field with a List of Strings (name, type, projection)
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=createFieldFromList,indent=0]
----
....
include::output/feature_field_create_list.txt[]
....

[source,groovy]
.Create a Field from a Map where keys are name, type, proj
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=createFieldFromMap,indent=0]
----
....
include::output/feature_field_create_map.txt[]
....

[source,groovy]
.Access a Field's properties
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=getFieldProperties,indent=0]
----
....
include::output/feature_field_properties.txt[]
....

=== Creating Schemas

[source,groovy]
.Create a Schema from a list of Fields
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=createSchemaFromFields,indent=0]
----
....
include::output/schema_create_fields.txt[]
....

[source,groovy]
.Create a Schema from a list of Lists
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=createSchemaFromLists,indent=0]
----
....
include::output/schema_create_lists.txt[]
....

[source,groovy]
.Create a Schema from a list of Maps
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=createSchemaFromMaps,indent=0]
----
....
include::output/schema_create_maps.txt[]
....

[source,groovy]
.Create a Schema from a string
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=createSchemaFromString,indent=0]
----
....
include::output/schema_create_string.txt[]
....

=== Getting Schema Properties

[source,groovy]
.Get the Schema's name
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=getSchemaProperties_name,indent=0]
----
....
include::output/schema_properties_name.txt[]
....

[source,groovy]
.Get the Schema's geometry Field
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=getSchemaProperties_geom,indent=0]
----
....
include::output/schema_properties_geom.txt[]
....

[source,groovy]
.Get the Schema's Projection
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=getSchemaProperties_proj,indent=0]
----
....
include::output/schema_properties_proj.txt[]
....

[source,groovy]
.Get the Schema's URI
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=getSchemaProperties_uri,indent=0]
----
....
include::output/schema_properties_uri.txt[]
....

[source,groovy]
.Get the Schema's specification string
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=getSchemaProperties_spec,indent=0]
----
....
include::output/schema_properties_spec.txt[]
....

=== Getting Schema Fields

[source,groovy]
.Get the Schema's Fields
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=getSchemaFields_fields,indent=0]
----
....
include::output/schema_fields_fields.txt[]
....

[source,groovy]
.Get a Field
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=getSchemaFields_field_name,indent=0]
----
....
include::output/schema_fields_field.txt[]
....

[source,groovy]
.Get a Field
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=getSchemaFields_get,indent=0]
----
....
include::output/schema_fields_get.txt[]
....

[source,groovy]
.Check if a Schema has a Field
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=getSchemaFields_has,indent=0]
----
....
include::output/schema_fields_has.txt[]
....

=== Modifying Schemas

[source,groovy]
.Change the projection of a Schema
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=reprojectSchema,indent=0]
----
....
include::output/schema_reproject.txt[]
....

[source,groovy]
.Change the geometry type of a Schema
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=changeGeometryTypeSchema,indent=0]
----
....
include::output/schema_changegeometrytype.txt[]
....

[source,groovy]
.Change a Field definition of a Schema
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=changeFieldSchema,indent=0]
----
....
include::output/schema_changefield.txt[]
....

[source,groovy]
.Change Field definitions of a Schema
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=changeFieldsSchema,indent=0]
----
....
include::output/schema_changefields.txt[]
....

[source,groovy]
.Add a Field to a Schema
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=addFieldSchema,indent=0]
----
....
include::output/schema_addfield.txt[]
....

[source,groovy]
.Add a List of Fields to a Schema
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=addFieldsSchema,indent=0]
----
....
include::output/schema_addfields.txt[]
....

[source,groovy]
.Remove a Field from a Schema
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=removeFieldSchema,indent=0]
----
....
include::output/schema_removefield.txt[]
....

[source,groovy]
.Remove a List of Fields from a Schema
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=removeFieldsSchema,indent=0]
----
....
include::output/schema_removefields.txt[]
....

[source,groovy]
.Create a new Schema from an existing Schema but only including a subset of Fields
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=removeFieldsSchema,indent=0]
----
....
include::output/schema_includefields.txt[]
....

=== Combining Schemas

Combining two Schemas results in a Map with two values: schema and fields.  The schema property contains
the new Schema.  The fields property is List of two Maps which both contain a mapping between the fields
of the original Schema and the newly created Schema.

Optional arguments to the Schema.addSchema method are:

* postfixAll: Whether to postfix all field names (true) or not (false). If true, all Fields from the this current Schema will have '1' at the end of their name while the other Schema's Fields will have '2'. Defaults to false.
* includeDuplicates: Whether or not to include duplicate fields names. Defaults to false. If a duplicate is found a '2' will be added.
* maxFieldNameLength: The maximum new Field name length (mostly to support shapefiles where Field names can't be longer than 10 characters
* firstPostfix: The postfix string (default is '1') for Fields from the current Schema. Only applicable when postfixAll or includeDuplicates is true.
* secondPostfix: The postfix string (default is '2') for Fields from the other Schema. Only applicable when postfixAll or includeDuplicates is true.

[source,groovy]
.Combine two Schemas with no duplicate fields and no postfixes to field names
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=addSchemaNoPrefixNoDuplicates_1,indent=0]
----
....
include::output/schema_addschema_noprefix_noduplicates_1.txt[]
....

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=addSchemaNoPrefixNoDuplicates_2,indent=0]
----
....
include::output/schema_addschema_noprefix_noduplicates_2.txt[]
....

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=addSchemaNoPrefixNoDuplicates_3,indent=0]
----
....
include::output/schema_addschema_noprefix_noduplicates_3.txt[]
....

[source,groovy]
.Combine two Schemas with no duplicate fields and postfixes
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=addSchemaPostFixAllNoDuplicates_1,indent=0]
----
....
include::output/schema_addschema_postfixall_noduplicates_1.txt[]
....

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=addSchemaPostFixAllNoDuplicates_2,indent=0]
----
....
include::output/schema_addschema_postfixall_noduplicates_2.txt[]
....

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=addSchemaPostFixAllNoDuplicates_3,indent=0]
----
....
include::output/schema_addschema_postfixall_noduplicates_3.txt[]
....

=== Creating Features from a Schema

[source,groovy]
.Create a Feature from a Schema with a Map of values
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=createFeatureFromSchemaMap,indent=0]
----
....
include::output/schema_create_feature_map.txt[]
....

[source,groovy]
.Create a Feature from a Schema with a List of values.  The order of the values must match the order of the Fields.
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=createFeatureFromSchemaList,indent=0]
----
....
include::output/schema_create_feature_list.txt[]
....

[source,groovy]
.Create a Feature from a Schema with another Feature.
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=createFeatureFromSchemaFeature,indent=0]
----
....
include::output/schema_create_feature_feature.txt[]
....

[source,groovy]
.Create an empty Feature from a Schema.
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=createFeatureFromSchemaEmpty,indent=0]
----
....
include::output/schema_create_feature_empty.txt[]
....

=== Reading and Writing Schemas

The Schema IO classes are in the *http://geoscript.github.io/geoscript-groovy/api/1.18-SNAPSHOT/geoscript/feature/io/package-summary.html[geoscript.feature.io]* package.

==== Finding Schema Writer and Readers

[source,groovy]
.List all Schema Writers
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=listSchemaWriters,indent=0]
----
....
include::output/schema_list_writers.txt[]
....

[source,groovy]
.Find a Schema Writer
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=findSchemaWriter,indent=0]
----
....
include::output/schema_find_writer.txt[]
....

[source,groovy]
.List all Schema Readers
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=listSchemaReaders,indent=0]
----
....
include::output/schema_list_readers.txt[]
....

[source,groovy]
.Find a Schema Reader
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=findSchemaReader,indent=0]
----
....
include::output/schema_find_reader.txt[]
....

==== String

[source,groovy]
.Read a Schema from a String
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=readSchemaFromString,indent=0]
----
....
include::output/schema_read_string.txt[]
....

[source,groovy]
.Write a Schema to a String
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=writeSchemaToString,indent=0]
----
....
include::output/schema_write_string.txt[]
....

==== JSON

[source,groovy]
.Read a Schema from a JSON
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=readSchemaFromJson,indent=0]
----
....
include::output/schema_read_json.txt[]
....

[source,groovy]
.Write a Schema to a JSON
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=writeSchemaToJson,indent=0]
----
....
include::output/schema_write_json.txt[]
....

==== XML

[source,groovy]
.Read a Schema from a XML
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=readSchemaFromXml,indent=0]
----
....
include::output/schema_read_xml.txt[]
....

[source,groovy]
.Write a Schema to a XML
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=writeSchemaToXml,indent=0]
----
....
include::output/schema_write_xml.txt[]
....

=== Creating Features

[source,groovy]
.Create an empty Feature from a Map of values and a Schema.
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=createFeatureFromMapWithSchema,indent=0]
----
....
include::output/feature_create_map_schema.txt[]
....

[source,groovy]
.Create an empty Feature from a List of values and a Schema.
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=createFeatureFromListWithSchema,indent=0]
----
....
include::output/feature_create_list_schema.txt[]
....

[source,groovy]
.Create an empty Feature from a Map of values.  The Schema is inferred from the values.
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=createFeatureFromMap,indent=0]
----
....
include::output/feature_create_map.txt[]
....

=== Getting Feature Properties

[source,groovy]
.Get a Feature's ID
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=getFeatureProperties_1,indent=0]
----
....
include::output/feature_properties_1.txt[]
....

[source,groovy]
.Get a Feature's Geometry
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=getFeatureProperties_2,indent=0]
----
....
include::output/feature_properties_2.txt[]
....

[source,groovy]
.Get a Feature's Bounds
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=getFeatureProperties_3,indent=0]
----
....
include::output/feature_properties_3.txt[]
....

[source,groovy]
.Get a Feature's attributes
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=getFeatureProperties_4,indent=0]
----
....
include::output/feature_properties_4.txt[]
....

=== Getting Feature Attributes

[source,groovy]
.Get an attribute from a Feature using a Field name
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=getAndSetFeatureAttributes_1,indent=0]
----
....
include::output/feature_attribute_1.txt[]
....

[source,groovy]
.Get an attribute from a Feature using a Field
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=getAndSetFeatureAttributes_2,indent=0]
----
....
include::output/feature_attribute_2.txt[]
....

[source,groovy]
.Set an attribute of a Feature using a Field name and a new value
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=getAndSetFeatureAttributes_3,indent=0]
----
....
include::output/feature_attribute_3.txt[]
....

[source,groovy]
.Set an attribute of a Feature using a Field and a new value
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=getAndSetFeatureAttributes_4,indent=0]
----
....
include::output/feature_attribute_4.txt[]
....

[source,groovy]
.Set attributes of a Feature using a Map of new values
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=getAndSetFeatureAttributes_5,indent=0]
----
....
include::output/feature_attribute_5.txt[]
....

[source,groovy]
.Set a new Geometry value
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=getAndSetFeatureAttributes_6,indent=0]
----
....
include::output/feature_attribute_6.txt[]
....

=== Reading and Writing Features

The Feature IO classes are in the *http://geoscript.github.io/geoscript-groovy/api/1.18-SNAPSHOT/geoscript/feature/io/package-summary.html[geoscript.feature.io]* package.

==== Finding Feature Writer and Readers

[source,groovy]
.List all Feature Writers
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=listFeatureWriters,indent=0]
----
....
include::output/features_writers_list.txt[]
....

[source,groovy]
.Find a Feature Writer
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=getFeatureWriter,indent=0]
----
....
include::output/features_writer_get.txt[]
....

[source,groovy]
.List all Feature Readers
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=listFeatureReaders,indent=0]
----
....
include::output/features_readers_list.txt[]
....

[source,groovy]
.Find a Feature Reader
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=getFeatureReader,indent=0]
----
....
include::output/features_reader_get.txt[]
....

==== GeoJSON

[source,groovy]
.Get a GeoJSON String from a Feature
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=featureGetGeoJson,indent=0]
----
....
include::output/feature_get_geojson.txt[]
....

[source,groovy]
.Write a Feature to GeoJSON
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=writeFeatureToGeoJson,indent=0]
----
....
include::output/feature_write_geojson.txt[]
....

[source,groovy]
.Get a Feature from GeoJSON
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=featureFromGeoJSON,indent=0]
----
....
include::output/feature_from_geojson.txt[]
....

[source,groovy]
.Read a Feature from GeoJSON
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=readFeatureFromGeoJson,indent=0]
----
....
include::output/feature_read_geojson.txt[]
....

==== GeoBuf

[source,groovy]
.Get a GeoBuf String from a Feature
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=featureGetGeobuf,indent=0]
----
....
include::output/feature_get_geobuf.txt[]
....

[source,groovy]
.Get a Feature from a GeoBuf String
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=featureFromGeoBuf,indent=0]
----
....
include::output/feature_from_geobuf.txt[]
....

[source,groovy]
.Write a Feature to a GeoBuf String
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=writeFeatureToGeoBuf,indent=0]
----
....
include::output/feature_write_geobuf.txt[]
....

[source,groovy]
.Read a Feature from a GeoBuf String
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=readFeatureFromGeoBuf,indent=0]
----
....
include::output/feature_read_geobuf.txt[]
....

==== GeoRSS

[source,groovy]
.Get a GeoRSS String from a Feature
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=featureGetGeoRSS,indent=0]
----
....
include::output/feature_get_georss.txt[]
....

[source,groovy]
.Get a Feature from a GeoRSS String
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=featureFromGeoRSS,indent=0]
----
....
include::output/feature_from_georss.txt[]
....

[source,groovy]
.Write a Feature to a GeoRSS String
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=writeFeatureToGeoRSS,indent=0]
----
....
include::output/feature_write_georss.txt[]
....

[source,groovy]
.Read a Feature from a GeoRSS String
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=readFeatureFromGeoRSS,indent=0]
----
....
include::output/feature_read_georss.txt[]
....

==== GML

[source,groovy]
.Get a GML String from a Feature
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=featureGetGml,indent=0]
----
....
include::output/feature_get_gml.txt[]
....

[source,groovy]
.Get a Feature from a GML String
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=featureFromGml,indent=0]
----
....
include::output/feature_from_gml.txt[]
....

[source,groovy]
.Write a Feature to a GML String
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=writeFeatureToGml,indent=0]
----
....
include::output/feature_write_gml.txt[]
....

[source,groovy]
.Read a Feature from a GML String
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=readFeatureFromGml,indent=0]
----
....
include::output/feature_read_gml.txt[]
....

==== GPX

[source,groovy]
.Get a GPX String from a Feature
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=featureGetGpx,indent=0]
----
....
include::output/feature_get_gpx.txt[]
....

[source,groovy]
.Get a Feature from a GPX String
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=featureFromGpx,indent=0]
----
....
include::output/feature_from_gpx.txt[]
....

[source,groovy]
.Write a Feature to a GPX String
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=writeFeatureToGpx,indent=0]
----
....
include::output/feature_write_gpx.txt[]
....

[source,groovy]
.Read a Feature from a GPX String
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=readFeatureFromGpx,indent=0]
----
....
include::output/feature_read_gpx.txt[]
....

==== KML

[source,groovy]
.Get a KML String from a Feature
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=featureGetKml,indent=0]
----
....
include::output/feature_get_kml.txt[]
....

[source,groovy]
.Get a Feature from a KML String
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=featureFromKml,indent=0]
----
....
include::output/feature_from_kml.txt[]
....

[source,groovy]
.Write a Feature to a KML String
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=writeFeatureToKml,indent=0]
----
....
include::output/feature_write_kml.txt[]
....

[source,groovy]
.Read a Feature from a KML String
----
include::{sourcedir}/geoscript/cookbook/FeatureRecipes.groovy[tags=readFeatureFromKml,indent=0]
----
....
include::output/feature_read_kml.txt[]
....