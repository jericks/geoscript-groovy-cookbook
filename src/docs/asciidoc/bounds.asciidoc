ifndef::imagesdir[:imagesdir: images]
ifndef::sourcedir[:sourcedir: ../../main/groovy]

== Bounds Recipes

The Bounds class is in the *http://geoscript.github.io/geoscript-groovy/api/1.17-SNAPSHOT/geoscript/geom/package-summary.html[geoscript.geom]* package.

It represents a minimum bounding box or rectangle, so it has minimum and maximum x and y coordinates in a specified projection.

=== Creating Bounds

[source,groovy]
.Create a Bounds from four coordinates (minx, miny, maxx, maxy) and a projection.
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=createBounds,indent=0]
----
[.thumb]
image::geometry_create_bounds.png[]

[source,groovy]
.Create a Bounds from four coordinates (minx, miny, maxx, maxy) without a projection.  The projection can be set later.
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=createBoundsNoProjection,indent=0]
----
[.thumb]
image::geometry_create_bounds_no_proj.png[]

[source,groovy]
.Create a Bounds from a string with commas delimiting minx, miny, maxx, maxy and projection values.
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=createBoundsFromStringWithCommas,indent=0]
----
[.thumb]
image::geometry_create_bounds_fromstring_withcommas.png[]

[source,groovy]
.Create a Bounds from a string with spaces delimiting minx, miny, maxx, maxy and projection values.
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=createBoundsFromStringWithSpaces,indent=0]
----
[.thumb]
image::geometry_create_bounds_fromstring_withspaces.png[]

=== Getting Bounds Properties

[source,groovy]
.Create a Bounds and view it's string representation
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=getBoundsProperties,indent=0]
----
....
include::output/geometry_bounds_properties.txt[]
....

[source,groovy]
.Get the minimum x coordinate
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=getBoundsProperties_minX,indent=0]
----
....
include::output/geometry_bounds_properties_minx.txt[]
....

[source,groovy]
.Get the minimum y coordinate
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=getBoundsProperties_minY,indent=0]
----
....
include::output/geometry_bounds_properties_miny.txt[]
....

[source,groovy]
.Get the maximum x coordinate
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=getBoundsProperties_maxX,indent=0]
----
....
include::output/geometry_bounds_properties_maxx.txt[]
....

[source,groovy]
.Get the maximum y coordinate
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=getBoundsProperties_maxY,indent=0]
----
....
include::output/geometry_bounds_properties_maxy.txt[]
....

[source,groovy]
.Get the Projection
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=getBoundsProperties_proj,indent=0]
----
....
include::output/geometry_bounds_properties_proj.txt[]
....

[source,groovy]
.Get the area
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=getBoundsProperties_area,indent=0]
----
....
include::output/geometry_bounds_properties_area.txt[]
....

[source,groovy]
.Get the width
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=getBoundsProperties_width,indent=0]
----
....
include::output/geometry_bounds_properties_width.txt[]
....

[source,groovy]
.Get the height
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=getBoundsProperties_height,indent=0]
----
....
include::output/geometry_bounds_properties_height.txt[]
....

[source,groovy]
.Get the aspect ratio
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=getBoundsProperties_aspect,indent=0]
----
....
include::output/geometry_bounds_properties_aspect.txt[]
....

[source,groovy]
.A Bounds is not a Geometry but you can get a Geometry from a Bounds
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=boundsGetGeometry,indent=0]
----
[.thumb]
image::geometry_bounds_geometry.png[]

[source,groovy]
.You can also get a Polygon from a Bounds
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=boundsGetPolygon,indent=0]
----
[.thumb]
image::geometry_bounds_polygon.png[]

[source,groovy]
.Get the four corners from a Bounds as a List of Points
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=boundsGetCorners,indent=0]
----
[.thumb]
image::geometry_bounds_corners.png[]

=== Processing Bounds

[source,groovy]
.Reproject a Bounds from one Projection to another.
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=reprojectBounds1,indent=0]
----
....
include::output/geometry_bounds_reproject1.txt[]
....

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=reprojectBounds2,indent=0]
----
....
include::output/geometry_bounds_reproject2.txt[]
....

[source,groovy]
.Expand a Bounds by a given distance
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=expandByBounds,indent=0]
----
[.thumb]
image::geometry_bounds_expandby.png[]

[source,groovy]
.Expand a Bounds to include another Bounds
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=expandBounds,indent=0]
----
[.thumb]
image::geometry_bounds_expand.png[]

[source,groovy]
.Scale an existing Bounds some distance to create a new Bounds
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=scaleBounds,indent=0]
----
[.thumb]
image::geometry_bounds_scale.png[]

[source,groovy]
.Divide a Bounds into smaller tiles or Bounds
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=boundsTile,indent=0]
----
[.thumb]
image::geometry_bounds_tile.png[]

[source,groovy]
.Calculate a quad tree for this Bounds between the start and stop levels. A Closure is called for each new Bounds generated.
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=boundsQuadTree,indent=0]
----
....
include::output/geometry_bounds_quadtree.txt[]
....

[source,groovy]
.Determine whether a Bounds is empty or not. A Bounds is empty if it is null or it's area is 0.
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=boundsIsEmpty_false,indent=0]
----
....
include::output/geometry_bounds_isempty_false.txt[]
....

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=boundsIsEmpty_true,indent=0]
----
....
include::output/geometry_bounds_isempty_true.txt[]
....

[source,groovy]
.Determine if a Bounds contains another Bounds
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=boundsContainsBounds1,indent=0]
----
[.thumb]
image::geometry_bounds_contains_bounds1.png[]
....
include::output/geometry_bounds_contains_bounds1.txt[]
....

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=boundsContainsBounds2,indent=0]
----
[.thumb]
image::geometry_bounds_contains_bounds2.png[]
....
include::output/geometry_bounds_contains_bounds2.txt[]
....

[source,groovy]
.Determine if a Bounds contains a Point
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=boundsContainsPoint1,indent=0]
----
[.thumb]
image::geometry_bounds_contains_point1.png[]
....
include::output/geometry_bounds_contains_point1.txt[]
....

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=boundsContainsPoint2,indent=0]
----
[.thumb]
image::geometry_bounds_contains_point2.png[]
....
include::output/geometry_bounds_contains_point2.txt[]
....

[source,groovy]
.Determine if two Bounds intersect
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=boundsIntersectsBounds1,indent=0]
----
[.thumb]
image::geometry_bounds_intersects1.png[]
....
include::output/geometry_bounds_intersects1.txt[]
....

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=boundsIntersectsBounds2,indent=0]
----
[.thumb]
image::geometry_bounds_intersects2.png[]
....
include::output/geometry_bounds_intersects2.txt[]
....

[source,groovy]
.Calculate the intersection between two Bounds
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=boundsIntersection,indent=0]
----
[.thumb]
image::geometry_bounds_intersection.png[]

[source,groovy]
.Generate a grid from a Bounds with a given number of columns and rows and the polygon shape.  Other shapes include: polygon, point, circle/ellipse, hexagon, hexagon-inv).
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=boundsGetPolygonGridByColumnsAndRows,indent=0]
----
[.thumb]
image::geometry_bounds_grid_polygon_colsrows.png[]

[source,groovy]
.Generate a grid from a Bounds with a given number of columns and rows and a point shape.  A Closure that is called with a geometry, column, and row for each grid cell that is created.
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=boundsGeneratePointGridByColumnsAndRows,indent=0]
----
[.thumb]
image::geometry_bounds_grid_point_colsrows.png[]

[source,groovy]
.Generate a grid from a Bounds with a given cell width and height and a circle/ellipse shape.
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=boundsGetCircleGridByCellWidthAndHeight,indent=0]
----
[.thumb]
image::geometry_bounds_grid_circle_cellwidthheight.png[]

[source,groovy]
.Generate a grid from a Bounds with a given cell width and height and a hexagon shape.  A Closure is called with a geometry, column, and row for each grid cell generated.
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=boundsGetHexagonGridByColumnsAndRows,indent=0]
----
[.thumb]
image::geometry_bounds_grid_hexagon_cellwidthheight.png[]

[source,groovy]
.Generate a grid from a Bounds with a given cell width and height and an inverted hexagon shape.
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=boundsGetHexagonInvGridByColumnsAndRows,indent=0]
----
[.thumb]
image::geometry_bounds_grid_hexagoninv_colsrows.png[]

[source,groovy]
.Generate a grid from a Bounds with a given cell width and height and a triangle shape.
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=boundsGetTriangleGridByColumnsAndRows,indent=0]
----
[.thumb]
image::geometry_bounds_grid_triangle_colsrows.png[]

[source,groovy]
.Create a rectangle from a Bounds with a given number of Points and a rotation angle in radians.
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=boundsCreateRectangle,indent=0]
----
[.thumb]
image::geometry_bounds_createrectangle.png[]

[source,groovy]
.Create an ellipse from a Bounds. The default number of points is 20 and the default rotation angle in radians is 0.
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=boundsCreateEllipse,indent=0]
----
[.thumb]
image::geometry_bounds_createreellipse.png[]

[source,groovy]
.Create a squircle from a Bounds. The default number of points is 20 and the default rotation angle in radians is 0.
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=boundsCreateSquircle,indent=0]
----
[.thumb]
image::geometry_bounds_createresquircle.png[]

[source,groovy]
.Create a super circle from a Bounds with a given power. The default number of points is 20 and the default rotation angle in radians is 0.
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=boundsCreateSuperCircle,indent=0]
----
[.thumb]
image::geometry_bounds_createresupercircle.png[]

[source,groovy]
.Create an arc from a Bounds with a start angle and angle extent. The default number of points is 20 and the default rotation angle in radians is 0.
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=boundsCreateArc,indent=0]
----
[.thumb]
image::geometry_bounds_createrearc.png[]

[source,groovy]
.Create an arc polygon from a Bounds with a start angle and angle extent. The default number of points is 20 and the default rotation angle in radians is 0.
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=boundsCreateArcPolygon,indent=0]
----
[.thumb]
image::geometry_bounds_createrearcpolygon.png[]

[source,groovy]
.Create a sine star from a Bounds with a number of arms and an arm length ratio. The default number of points is 20 and the default rotation angle in radians is 0.
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=boundsCreateSineStar,indent=0]
----
[.thumb]
image::geometry_bounds_createsinestar.png[]

[source,groovy]
.Create a hexagon from a Bounds that is either inverted (false) or not (true).
----
include::{sourcedir}/geoscript/cookbook/BoundsRecipes.groovy[tags=boundsCreateHexagon,indent=0]
----
[.thumb]
image::geometry_bounds_createhexagon.png[]