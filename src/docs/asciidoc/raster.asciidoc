ifndef::imagesdir[:imagesdir: images]
ifndef::sourcedir[:sourcedir: ../../main/groovy]

== Raster Recipes

The Raster classes are in the *http://geoscript.github.io/geoscript-groovy/api/1.13-SNAPSHOT/geoscript/layer/package-summary.html[geoscript.layer]* package.

=== Raster Properties

Read a Raster from a File

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=properties,indent=0]
----
[.thumb]
image::raster_properties.png[]

Get the Raster's Bounds.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=properties_bounds,indent=0]
----
....
include::output/raster_properties_bounds.txt[]
....

Get the Raster's Projection.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=properties_projection,indent=0]
----
....
include::output/raster_properties_projection.txt[]
....

Get the Raster's Size.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=properties_size,indent=0]
----
....
include::output/raster_properties_size.txt[]
....

Get the Raster's number of columns and rows.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=properties_colsrows,indent=0]
----
....
include::output/raster_properties_colsrows.txt[]
....

Get the Raster's Bands.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=properties_bands,indent=0]
----
....
include::output/raster_properties_bands.txt[]
....

Get the Raster's block size.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=properties_blocksize,indent=0]
----
....
include::output/raster_properties_blocksize.txt[]
....

Get the Raster's pixel size.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=properties_pixelsize,indent=0]
----
....
include::output/raster_properties_pixelsize.txt[]
....

Get more information about a Raster's Bounds.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=band,indent=0]
----
....
include::output/raster_band.txt[]
....

Get the minimum and maximum values from a Raster for each band

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=properties_extrema,indent=0]
----
....
include::output/raster_properties_extrema.txt[]
....

Get a Point at the given pixel location.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=properties_getpoint,indent=0]
----
....
include::output/raster_properties_getpoint.txt[]
....

Get a Pixel location at the given Point.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=properties_getpixel,indent=0]
----
....
include::output/raster_properties_getpixel.txt[]
....

Determine whether the Raster covers the given Point.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=properties_containspoint,indent=0]
----
....
include::output/raster_properties_containspoint.txt[]
....

Determine whether the Raster covers the given Pixel.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=properties_containspixel,indent=0]
----
....
include::output/raster_properties_containspixel.txt[]
....

Get a RenderedImage from the Raster

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=properties_image,indent=0]
----
[.thumb]
image::raster_properies_image.png[]

Dispose of the Raster when you are done

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=properties_dispose,indent=0]
----

=== Raster Values

Get values from a Raster

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=values,indent=0]
----
[.thumb]
image::raster_values.png[]

Get values from a Raster with a Point.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=values_1,indent=0]
----
....
include::output/raster_values_1.txt[]
....

Get values from a Raster with a Pixel Location.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=values_2,indent=0]
----
....
include::output/raster_values_2.txt[]
....

Get neighboring values from a Raster with a Point Location.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=properties_neighbors_point,indent=0]
----
....
include::output/raster_properties_neighbors_point.txt[]
....

Get neighboring values from a Raster with a Pixel Location.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=properties_neighbors_pixel,indent=0]
----
....
include::output/raster_properties_neighbors_pixel.txt[]
....

Get values from a Raster for a range of pixels in a list of lists.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=values_3,indent=0]
----
....
include::output/raster_values_3.txt[]
....

Get values from a Raster for a range of pixels in a flat list.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=values_4,indent=0]
----
....
include::output/raster_values_4.txt[]
....

Get values from a Raster for a range of pixels as a pretty printed string.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=values_5,indent=0]
----
....
include::output/raster_values_5.txt[]
....

Iterate over the cells in a Raster.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=values_6,indent=0]
----
....
include::output/raster_values_6.txt[]
....

Iterate over a window of cells in a Raster.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=values_7,indent=0]
----
....
include::output/raster_values_7.txt[]
....

Set values on a Raster

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=rasterMath,indent=0]
----
....
include::output/raster_math.txt[]
....

[.thumb]
image::raster_math_orig.png[]

[.thumb]
image::raster_math_100.png[]

=== Raster Processing

==== Crop

Crop a Raster with a Bounds

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=crop,indent=0]
----
[.thumb]
image::raster_crop.png[]

==== Project

Reproject a Raster to another Projection

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=reproject,indent=0]
----
[.thumb]
image::raster_reproject.png[]

==== Contours

Create vector contours from a Raster

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=contours,indent=0]
----
[.thumb]
image::raster_contours.png[]

==== Stylize

Stylize a Raster by baking in a style to create a new Raster

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=stylize,indent=0]
----
[.thumb]
image::raster_stylize.png[]

==== Reclassify

Reclassify a Raster

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=reclassify,indent=0]
----
[.thumb]
image::raster_reclassify.png[]

==== Scale

Scale a Raster

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=scale,indent=0]
----
....
include::output/raster_scaled.txt[]
....
[.thumb]
image::raster_scaled.png[]

==== Invert

Invert the values of a Raster

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=invert,indent=0]
----
[.thumb]
image::raster_invert.png[]

==== Exponent

Calculate the exponent of the values of a Raster

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=exp,indent=0]
----
[.thumb]
image::raster_exp.png[]

==== Log

Calculate the log of the values of a Raster

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=log,indent=0]
----
[.thumb]
image::raster_log.png[]


==== Vectorize

Create a Polygon Layer from a Raster

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=polygonLayer,indent=0]
----
[.thumb]
image::raster_polygonLayer.png[]

Create a Point Layer from a Raster

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=pointLayer,indent=0]
----
[.thumb]
image::raster_pointLayer.png[]

Get histogram of the Raster

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=getHistogram,indent=0]
----

....
include::output/raster_gethistogram.txt[]
....

[.thumb]
image::raster_gethistogram.png[]



==== Raster Algebra

===== Add

Add a constant value to a Raster

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=add,indent=0]
----
....
include::output/raster_add.txt[]
....
[.thumb]
image::raster_add.png[]

===== Subtract

Subtract a constant value from a Raster

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=minus,indent=0]
----
....
include::output/raster_minus.txt[]
....
[.thumb]
image::raster_minus.png[]

Subtract the Raster from a constant value

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=minusFrom,indent=0]
----
....
include::output/raster_minusfrom.txt[]
....
[.thumb]
image::raster_minusfrom.png[]

===== Multiply

Multiply a constant value against a Raster

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=multiply,indent=0]
----
....
include::output/raster_multiply.txt[]
....
[.thumb]
image::raster_multiply.png[]

===== Divide

Divide a constant value against a Raster

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/RasterRecipes.groovy[tags=divide,indent=0]
----
....
include::output/raster_divide.txt[]
....
[.thumb]
image::raster_divide.png[]