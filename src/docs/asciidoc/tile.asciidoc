ifndef::imagesdir[:imagesdir: images]
ifndef::sourcedir[:sourcedir: ../../main/groovy]

== Tile Recipes

The Tile classes are in the *http://geoscript.github.io/geoscript-groovy/api/1.9.0/geoscript/layer/package-summary.html[geoscript.layer]* package.

=== Tile

==== Tile Properties

Get a Tile's Properties.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileProperties,indent=0]
----
....
include::output/tile_properties.txt[]
....

==== ImageTile Properties

Some Tiles contain an Image. ImageTile's have an image property.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=imageTile,indent=0]
----

[.thumb]
image::tile_image_tile.png[]

=== Grid

A Grid describes a level in a Pyramid of Tiles.

==== Grid Properties

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=gridProperties,indent=0]
----
....
include::output/tile_grid_properties.txt[]
....

=== Pyramid

==== Pyramid Properties

Get the Pyramid's Bounds.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=pyramidPropertiesBounds,indent=0]
----
....
include::output/tiles_pyramid_properties_bounds.txt[]
....

Get the Pyramid's projection.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=pyramidPropertiesProj,indent=0]
----
....
include::output/tiles_pyramid_properties_proj.txt[]
....

Get the Pyramid's Origin.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=pyramidPropertiesOrigin,indent=0]
----
....
include::output/tiles_pyramid_properties_origin.txt[]
....

Get the Pyramid's Tile Width and Height.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=pyramidPropertiesWidthHeight,indent=0]
----
....
include::output/tiles_pyramid_properties_wh.txt[]
....

==== Create Pyramids

Create a Global Mercator Pyramid.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=pyramidGlobalMercatorPyramid,indent=0]
----
....
include::output/tile_pyramid_global_mercator.txt[]
....

Create a Global Geodetic Pyramid.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=pyramidGlobalGeodeticPyramid,indent=0]
----
....
include::output/tile_pyramid_global_geodetic.txt[]
....

Create a Global Mercator Pyramid from a well known name.

Well known names include:

* GlobalMercator
* Mercator
* GlobalMercatorBottomLeft
* GlobalMercatorTopLeft
* GlobalGeodetic
* Geodetic

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=createPyramidFromString_GlobalMercator,indent=0]
----
....
include::output/tile_pyramid_fromstring_globalmercator.txt[]
....

==== Get a Grid from a Pyramid

Get a the min Grid.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=minGrid,indent=0]
----
....
include::output/tile_pyramid_mingrid.txt[]
....

Get a the max Grid.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=maxGrid,indent=0]
----
....
include::output/tile_pyramid_maxgrid.txt[]
....

Get a Grid from a Pyramid by Zoom Level.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=gridFromPyramidByZoomLevel,indent=0]
----
....
include::output/tile_pyramid_grid_zoomlevel.txt[]
....

==== Reading and Writing Pyramids

The Pyramid IO classes are in the *http://geoscript.github.io/geoscript-groovy/api/1.9.0/geoscript/layer/io/package-summary.html[geoscript.layer.io]* package.

==== Finding Pyramid Writer and Readers

[source,groovy]
.List all Pyramid Writers
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=listPyramidWriters,indent=0]
----
....
include::output/pyramid_list_writers.txt[]
....

[source,groovy]
.Find a Pyramid Writer
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=findPyramidWriter,indent=0]
----
....
include::output/pyramid_find_writer.txt[]
....

[source,groovy]
.List all Pyramid Readers
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=listPyramidReaders,indent=0]
----
....
include::output/pyramid_list_readers.txt[]
....

[source,groovy]
.Find a Pyramid Reader
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=findPyramidReader,indent=0]
----
....
include::output/pyramid_find_reader.txt[]
....


===== JSON

Get a JSON String from a Pyramid.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=pyramidToJson,indent=0]
----
....
include::output/tile_pyramid_to_json.txt[]
....

===== XML

Get a XML String from a Pyramid.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=pyramidToXml,indent=0]
----
....
include::output/tile_pyramid_to_xml.txt[]
....

===== CSV

Get a CSV String from a Pyramid.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=pyramidToCsv,indent=0]
----
....
include::output/tile_pyramid_to_csv.txt[]
....

=== Tile Layer

==== Tile Layer Properties

Create a TileLayer from an MBTiles File.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerProperties,indent=0]
----

Get the TileLayer's name.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerProperties_name,indent=0]
----
....
include::output/tilelayer_properties_name.txt[]
....

Get the TileLayer's Bounds.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerProperties_bounds,indent=0]
----
....
include::output/tilelayer_properties_bounds.txt[]
....

Get the TileLayer's Projection.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerProperties_proj,indent=0]
----
....
include::output/tilelayer_properties_proj.txt[]
....

Get the TileLayer's Pyramid.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerProperties_pyramid,indent=0]
----
....
include::output/tilelayer_properties_pyramid.txt[]
....

Get a Tile from a  TileLayer.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerProperties_tile,indent=0]
----
....
include::output/tilelayer_properties_tile.txt[]
....

[.thumb]
image::tilelayer_properties_tile.png[]

=== TileCursor

A TileCursor is a way to get a collection of Tiles from a TileLayer.

Get a TileCursor with all of the Tiles form a TileLayer in a zoom level.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileCursorByZoomLevel,indent=0]
----
....
include::output/tile_cursor_zoomlevel.txt[]
....

Get a TileCursor with Tiles form a TileLayer in a zoom level between min and max x and y coordinates.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileCursorByZoomLevelAndMinMax,indent=0]
----
....
include::output/tile_cursor_zoomlevelminmax.txt[]
....