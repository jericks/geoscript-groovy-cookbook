ifndef::imagesdir[:imagesdir: images]
ifndef::sourcedir[:sourcedir: ../../main/groovy]

== Tile Recipes

The Tile classes are in the *http://geoscript.github.io/geoscript-groovy/api/1.19-SNAPSHOT/geoscript/layer/package-summary.html[geoscript.layer]* package.

=== Tile

==== Tile Properties

Get a Tile's Properties.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileProperties,indent=0]
----
....
include::output/tile_properties.txt[]
....

==== ImageTile Properties

Some Tiles contain an Image. ImageTile's have an image property.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=imageTile,indent=0]
----

[.thumb]
image::tile_image_tile.png[]

=== Grid

A Grid describes a level in a Pyramid of Tiles.

==== Grid Properties

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=gridProperties,indent=0]
----
....
include::output/tile_grid_properties.txt[]
....

=== Pyramid

==== Pyramid Properties

Get the Pyramid's Bounds.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=pyramidPropertiesBounds,indent=0]
----
....
include::output/tiles_pyramid_properties_bounds.txt[]
....

Get the Pyramid's projection.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=pyramidPropertiesProj,indent=0]
----
....
include::output/tiles_pyramid_properties_proj.txt[]
....

Get the Pyramid's Origin.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=pyramidPropertiesOrigin,indent=0]
----
....
include::output/tiles_pyramid_properties_origin.txt[]
....

Get the Pyramid's Tile Width and Height.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=pyramidPropertiesWidthHeight,indent=0]
----
....
include::output/tiles_pyramid_properties_wh.txt[]
....

==== Create Pyramids

Create a Global Mercator Pyramid.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=pyramidGlobalMercatorPyramid,indent=0]
----
....
include::output/tile_pyramid_global_mercator.txt[]
....

Create a Global Geodetic Pyramid.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=pyramidGlobalGeodeticPyramid,indent=0]
----
....
include::output/tile_pyramid_global_geodetic.txt[]
....

Create a Global Mercator Pyramid from a well known name.

Well known names include:

* GlobalMercator
* Mercator
* GlobalMercatorBottomLeft
* GlobalMercatorTopLeft
* GlobalGeodetic
* Geodetic

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=createPyramidFromString_GlobalMercator,indent=0]
----
....
include::output/tile_pyramid_fromstring_globalmercator.txt[]
....

==== Get Bounds from a Pyramid

Get the Bounds for a Tile.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=getBoundsForTile,indent=0]
----
....
include::output/tile_pyramid_bounds_tiles.txt[]
....
[.thumb]
image::tile_pyramid_bounds_tiles.png[]

Get the Bounds for an area around a Point at a zoom level.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=getBoundsAroundPoint,indent=0]
----
....
include::output/tile_pyramid_bounds_around_point.txt[]
....
[.thumb]
image::tile_pyramid_bounds_around_point.png[]

==== Get a Grid from a Pyramid

Get a the min Grid.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=minGrid,indent=0]
----
....
include::output/tile_pyramid_mingrid.txt[]
....

Get a the max Grid.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=maxGrid,indent=0]
----
....
include::output/tile_pyramid_maxgrid.txt[]
....

Get a Grid from a Pyramid by Zoom Level.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=gridFromPyramidByZoomLevel,indent=0]
----
....
include::output/tile_pyramid_grid_zoomlevel.txt[]
....

Get a Grid from a Pyramid by a Bounds and Resolution.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=gridFromPyramidByBoundsAndResolution,indent=0]
----
....
include::output/tile_pyramid_grid_bounds_res.txt[]
....

Get a Grid from a Pyramid by a Bounds and Size.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=gridFromPyramidByBoundsAndSize,indent=0]
----
....
include::output/tile_pyramid_grid_bounds_size.txt[]
....

==== Get Tile Coordinates

Get the tile coordinates from a Pyramid by Bounds and zoom level

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=pyramidGetTileCoordinatesByBoundsAndZoom,indent=0]
----
....
include::output/tile_pyramid_gettilecoordinates_bounds_zoom.txt[]
....

Get the tile coordinates from a Pyramid by Bounds and Grid

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=pyramidGetTileCoordinatesByBoundsAndGrid,indent=0]
----
....
include::output/tile_pyramid_gettilecoordinates_bounds_grid.txt[]
....

==== Reading and Writing Pyramids

The Pyramid IO classes are in the *http://geoscript.github.io/geoscript-groovy/api/1.19-SNAPSHOT/geoscript/layer/io/package-summary.html[geoscript.layer.io]* package.

===== Finding Pyramid Writer and Readers

[source,groovy]
.List all Pyramid Writers
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=listPyramidWriters,indent=0]
----
....
include::output/pyramid_list_writers.txt[]
....

[source,groovy]
.Find a Pyramid Writer
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=findPyramidWriter,indent=0]
----
....
include::output/pyramid_find_writer.txt[]
....

[source,groovy]
.List all Pyramid Readers
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=listPyramidReaders,indent=0]
----
....
include::output/pyramid_list_readers.txt[]
....

[source,groovy]
.Find a Pyramid Reader
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=findPyramidReader,indent=0]
----
....
include::output/pyramid_find_reader.txt[]
....


===== JSON

Get a JSON String from a Pyramid.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=pyramidToJson,indent=0]
----
....
include::output/tile_pyramid_to_json.txt[]
....

===== XML

Get a XML String from a Pyramid.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=pyramidToXml,indent=0]
----
....
include::output/tile_pyramid_to_xml.txt[]
....

===== CSV

Get a CSV String from a Pyramid.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=pyramidToCsv,indent=0]
----
....
include::output/tile_pyramid_to_csv.txt[]
....

===== GDAL XML

Write a Pyramid to a GDAL XML File

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=writePyramidToGdalTms,indent=0]
----
....
include::output/tile_pyramid_write_gdaltms.txt[]
....

Read a Pyramid from a GDAL XML File

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=readPyramidFromGdalTms,indent=0]
----
....
include::output/tile_pyramid_read_gdaltms.txt[]
....

=== Generating Tiles

==== Generating Image Tiles

===== MBTiles

Generate Image Tiles to a MBTiles file

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=generateTilesToMBTiles,indent=0]
----
[.thumb]
image::tile_generate_mbtiles.png[]

Generate Image Tiles to a MBTiles file with metatiles

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=generateTilesToMBTilesWithMetaTiles,indent=0]
----
[.thumb]
image::tile_generate_mbtiles_metatile.png[]


===== DBTiles

Generate Image Tiles to a MBTiles like JDBC Database.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=generateTilesToDBTiles,indent=0]
----
[.thumb]
image::tile_generate_dbtiles.png[]

===== GeoPackage

Generate Image Tiles to a GeoPackage file

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=generateTilesToGeoPackage,indent=0]
----
[.thumb]
image::tile_generate_geopackage.png[]

===== TMS

Generate Image Tiles to a TMS directory

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=generateTilesToTMS,indent=0]
----
[.thumb]
image::tile_generate_tms.png[]

===== UTFGrid

Generate UTFGrid tiles to a directory

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=generateUTFGrid,indent=0]
----
[.thumb]
image::utfgrid.png[]

===== Vector Tiles

Generate vector tiles to a directory

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=generatePbfVectorTiles,indent=0]
----
[.thumb]
image::pbf_vectortiles.png[]

Generate vector tiles to a MBTiles file

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=generatePbfVectorTilesToMBTiles,indent=0]
----
[.thumb]
image::pbf_vectortiles.png[]

=== Tile Layer

==== Tile Layer Properties

Create a TileLayer from an MBTiles File.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerProperties,indent=0]
----

Get the TileLayer's name.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerProperties_name,indent=0]
----
....
include::output/tilelayer_properties_name.txt[]
....

Get the TileLayer's Bounds.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerProperties_bounds,indent=0]
----
....
include::output/tilelayer_properties_bounds.txt[]
....

Get the TileLayer's Projection.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerProperties_proj,indent=0]
----
....
include::output/tilelayer_properties_proj.txt[]
....

Get the TileLayer's Pyramid.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerProperties_pyramid,indent=0]
----
....
include::output/tilelayer_properties_pyramid.txt[]
....

Get a Tile from a  TileLayer.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerProperties_tile,indent=0]
----
....
include::output/tilelayer_properties_tile.txt[]
....

[.thumb]
image::tilelayer_properties_tile.png[]

==== Get, put, and delete a Tile from a TileLayer

Get a Tile from a  TileLayer.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerGetPutDelete_get,indent=0]
----

[.thumb]
image::tileLayerGetPutDelete_get.png[]

Add a Tile to a TileLayer.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerGetPutDelete_put,indent=0]
----

[.thumb]
image::tileLayerGetPutDelete_put.png[]

Remove a Tile from a TileLayer.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerGetPutDelete_delete,indent=0]
----

....
include::output/tileLayerGetPutDelete_delete.txt[]
....

Close a TileLayer

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerGetPutDelete_close,indent=0]
----

==== Delete Tiles from a TileLayer

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerDeleteTiles1,indent=0]
----
....
include::output/tileLayerDeleteTiles1.txt[]
....

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerDeleteTiles2,indent=0]
----
....
include::output/tileLayerDeleteTiles2.txt[]
....

==== Tiles

Get a TileCursor from a TileLayer with all of the Tiles in a zoom level.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerTilesByZoomLevel,indent=0]
----
....
include::output/tileLayerTilesByZoomLevel.txt[]
....

Get a TileCursor from a TileLayer with Tiles from a zoom level between min and max x and y coordinates.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerTilesByZoomLevelAndMinMax,indent=0]
----
....
include::output/tileLayerTilesByZoomLevelAndMinMax.txt[]
....

Get a TileCursor from a TileLayer for a zoom level and a given Bounds.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerTilesByZoomLevelAndBounds,indent=0]
----
....
include::output/tileLayerTilesByZoomLevelAndBounds.txt[]
....

Get a TileCursor from a TileLayer for a zoom level and given x and y resolutions.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerTilesByZoomLevelAndResXY,indent=0]
----
....
include::output/tileLayerTilesByZoomLevelAndResXY.txt[]
....

Get a TileCursor from a TileLayer for a Bounds and a given canvas width and height.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerTilesByBoundsAndWidthHeight,indent=0]
----
....
include::output/tileLayerTilesByBoundsAndWidthHeight.txt[]
....

Get a TileCursor from a TileLayer around a Point at a given zoom level for a given canvas width and height.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerTilesAroundPointAtZoomLevelAndWidthHeight,indent=0]
----
....
include::output/tileLayerTilesAroundPointAtZoomLevelAndWidthHeight.txt[]
....

Get the tile coordinates from a TileLayer by Bounds and Grid

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerGetTileCoordinatesByBoundsAndGrid,indent=0]
----
....
include::output/tileLayerGetTileCoordinatesByBoundsAndGrid.txt[]
....

Get a Layer from a TileLayer representing the outline of the Tiles in the TileCursor.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerGetLayer,indent=0]
----
[.thumb]
image::tileLayerGetLayer.png[]

include::output/tileLayerGetLayer.asciidoc[]

==== Using Tile Layers

Get a TileLayer and make sure it is closed when done.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=withTileLayer,indent=0]
----
....
include::output/tile_withtilelayer.txt[]
....

==== Get Tile Layer from a Map

Get an MBTiles TileLayer from a Map

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerFromMap_mbtiles,indent=0]
----
....
include::output/tileLayerFromMap_mbtiles.txt[]
....

Get an GeoPackage TileLayer from a Map

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerFromMap_geopackage,indent=0]
----
....
include::output/tileLayerFromMap_geopackage.txt[]
....

Get an TMS TileLayer from a Map

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerFromMap_tms,indent=0]
----
....
include::output/tileLayerFromMap_tms.txt[]
....

Get an OSM TileLayer from a Map

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerFromMap_osm,indent=0]
----
....
include::output/tileLayerFromMap_osm.txt[]
....

Get an PBF Vector TileLayer from a Map

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerFromMap_pbf,indent=0]
----
....
include::output/tileLayerFromMap_pbf.txt[]
....

Get an UTF TileLayer from a Map

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerFromMap_utf,indent=0]
----
....
include::output/tileLayerFromMap_utf.txt[]
....

==== Get Tile Layer from a String

Get an MBTiles TileLayer from a String

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerFromString_mbtiles,indent=0]
----
....
include::output/tileLayerFromString_mbtiles.txt[]
....

Get an GeoPackage TileLayer from a String

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerFromString_geopackage,indent=0]
----
....
include::output/tileLayerFromString_geopackage.txt[]
....

Get an TMS TileLayer from a String

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerFromString_tms,indent=0]
----
....
include::output/tileLayerFromString_tms.txt[]
....

Get an OSM TileLayer from a String

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerFromString_osm,indent=0]
----
....
include::output/tileLayerFromString_osm.txt[]
....

Get an PBF Vector TileLayer from a String

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerFromString_pbf,indent=0]
----
....
include::output/tileLayerFromString_pbf.txt[]
....

Get an UTF TileLayer from a String

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileLayerFromString_utf,indent=0]
----
....
include::output/tileLayerFromString_utf.txt[]
....

=== TileRenderer

TileRenderers know how to create a Tile for a given Bounds.  GeoScript has TileRenderer for creating images,
vector tiles, and utfgrids.

==== Get default TileRenderer

Get a default TileRenderer for a TileLayer

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=getTileRenderer,indent=0]
----
[.thumb]
image::tile_gettilerenderer.png[]

==== ImageTileRenderer

Use an ImageTileRenderer to create an image Tile.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=useImageTileRenderer,indent=0]
----
[.thumb]
image::tile_imagetilerenderer.png[]

==== RasterTileRenderer

Use an RasterTileRenderer to create a image Tiles from a single Raster.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=useRasterTileRenderer,indent=0]
----
[.thumb]
image::tile_rastertilerenderer.png[]

==== VectorTileRenderer

Use an VectorTileRenderer to create a Vector Tile.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=useVectorTileRenderer,indent=0]
----
....
include::output/tile_vectortilerenderer.txt[]
....

==== PbfVectorTileRenderer

Use an PbfVectorTileRenderer to create a Vector Tile.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=usePbfVectorTileRenderer,indent=0]
----

==== UTFGridTileRenderer

Use an UTFGridTileRenderer to create a UTFGrid Tile.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=useUTFGridTileRenderer,indent=0]
----
....
include::output/tile_utfgridtilerenderer.txt[]
....


=== TileCursor

A TileCursor is a way to get a collection of Tiles from a TileLayer.

Get a TileCursor with all of the Tiles from a TileLayer in a zoom level.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileCursorByZoomLevel,indent=0]
----
....
include::output/tile_cursor_zoomlevel.txt[]
....

Get a TileCursor with Tiles from a TileLayer in a zoom level between min and max x and y coordinates.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileCursorByZoomLevelAndMinMax,indent=0]
----
....
include::output/tile_cursor_zoomlevelminmax.txt[]
....

Get a TileCursor with Tiles from a TileLayer in a zoom level for a given Bounds.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileCursorByZoomLevelAndBounds,indent=0]
----
....
include::output/tile_cursor_zoomlevelbounds.txt[]
....

Get a TileCursor with Tiles from a TileLayer in a zoom level for a given x and y resolution.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileCursorByZoomLevelAndResXY,indent=0]
----
....
include::output/tile_cursor_zoomlevelresxy.txt[]
....

Get a TileCursor with Tiles from a TileLayer within a Bounds for a given canvas width and height.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileCursorByBoundsAndWidthHeight,indent=0]
----
....
include::output/tile_cursor_boundswidthheight.txt[]
....

Get a TileCursor with Tiles from a TileLayer around a Point at a given zoom level for a given canvas width and height.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=tileCursorByBoundsAndWidthHeight,indent=0]
----
....
include::output/tile_cursor_boundswidthheight.txt[]
....

=== TMS

Access a TileLayer from an TMS directory

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=createTMS,indent=0]
----
<1> Name
<2> Image type
<3> Directory
<4> Pyramid

[.thumb]
image::tile_tms.png[]

=== MBTiles

Access a TileLayer from an MBTiles file

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=createMBTiles,indent=0]
----
[.thumb]
image::tile_mbtiles.png[]

=== DBTiles

Access a TileLayer from an DBTiles H2 database

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=createDBTiles,indent=0]
----
[.thumb]
image::tile_dbtiles.png[]

=== GeoPackage

Access a TileLayer with a Global Geodetic Pyramid from an GeoPackage file

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=createGeoPackageWorld,indent=0]
----
[.thumb]
image::tile_geopackage_world.png[]

Access a TileLayer with a Global Mercator Pyramid from an GeoPackage file

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=createGeoPackageWorldMerc,indent=0]
----
[.thumb]
image::tile_geopackage_worldmerc.png[]

=== UTFGrid

Access a TileLayer from an UTFGrid directory

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=createUTFGrid,indent=0]
----
[.thumb]
image::utfgrid.png[]

=== VectorTiles

Access a TileLayer from an VectorTiles directory

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=createVectorTiles,indent=0]
----
<1> Name
<2> Directory
<3> Pyramid
<4> Type

[.thumb]
image::pbf_vectortiles.png[]

Access a TileLayer from an VectorTiles MBTiles file

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=createVectorTilesFromMBTiles,indent=0]
----
<1> Name
<2> MBTiles File
<3> Pyramid
<4> Type

[.thumb]
image::pbf_vectortiles.png[]


=== Generating TileLayer

A GeneratingTileLayer can create tiles on demand when they are accessed.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=createGeneratingTileLayer,indent=0]
----
[.thumb]
image::tile_generatingtilelayer.png[]

=== OSM

Create a TileLayer for OSM tiles.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=createOSM,indent=0]
----
[.thumb]
image::tile_osm_default.png[]

Create a TileLayer for OSM tiles with custom urls.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=createOSMUrls,indent=0]
----
[.thumb]
image::tile_osm_urls.png[]

==== Standard OSM

Create a TileLayer for OSM tiles.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=getWellKnownOSM,indent=0]
----
[.thumb]
image::tile_osm_wellknown.png[]


==== Stamen Toner

Create a TileLayer for OSM Stamen Toner tiles.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=getWellKnownOSMStamenToner,indent=0]
----
[.thumb]
image::tile_osm_stamen_toner.png[]

==== Stamen Toner Lite

Create a TileLayer for OSM Stamen Toner Lite tiles.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=getWellKnownOSMStamenTonerLite,indent=0]
----
[.thumb]
image::tile_osm_stamen_toner_lite.png[]

==== Stamen Water Color

Create a TileLayer for OSM Stamen Water Color tiles.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=getWellKnownOSMStamenWaterColor,indent=0]
----
[.thumb]
image::tile_osm_stamen_water_color.png[]

==== Stamen Terrain

Create a TileLayer for OSM Stamen Terrain tiles.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=getWellKnownOSMStamenTerrain,indent=0]
----
[.thumb]
image::tile_osm_stamen_terrain.png[]

==== WikiMedia

Create a TileLayer for OSM WikiMedia tiles.

[source,groovy]
----
include::{sourcedir}/geoscript/cookbook/TileRecipes.groovy[tags=getWellKnownOSMWikiMedia,indent=0]
----
[.thumb]
image::tile_osm_wikimedia.png[]